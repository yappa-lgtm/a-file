services:
  a_file_app:
    container_name: a_file_app
    build:
      dockerfile: ./docker-build/app/Dockerfile
      context: ./
    environment:
      APP_CONFIG__RUN__HOST: "0.0.0.0"
      APP_CONFIG__RUN__PORT: 9444
      APP_CONFIG__DB__URL: postgresql+asyncpg://root:root@a_file_pg:5432/file_storage
      APP_CONFIG__DB__ECHO: 0
    develop:
      watch:
        - action: sync+restart
          path: ./app
          target: /app
        - action: rebuild
          path: ./poetry.lock
    ports:
      - "9444:9444"
    depends_on:
      a_file_pg:
        condition: service_healthy
    volumes:
      - a_file_uploads:/uploads
    networks:
      - a_file_app_network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://0.0.0.0:9444/api/v1/healthcheck/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  a_file_pg:
    container_name: a_file_pg
    image: postgres:16.4
    environment:
      POSTGRES_DB: file_storage
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /var/lib/postgresql/data
    volumes:
      - a_file_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d file_storage"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - a_file_app_network

volumes:
  a_file_pgdata:
     name: a_file_pgdata
  a_file_uploads:
    name: a_file_uploads

networks:
  a_file_app_network:
    name: app_network
    driver: bridge